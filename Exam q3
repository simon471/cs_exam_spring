3)  Consider the code for the Link, Stack and Queue classes.  Note Stack and Queue are not complete.

---------------------------------------------------------------
public class Link{
  Object thing;
  Link next;
}
---------------------------------------------------------------


----------------------------------------------------------------
public class Stack{
  Link head;
  int length=0;
  
  public Stack(Link first){
    head=first;
    length=1;}
  
  public void push(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
   public Link peek(Link newlink){
    return head;}
    
  .......
  
--------------------------------------------------------------
  
----------------------------------------------------------------
public class Queue{
  Link head;
  int length=0;
 
  public Queue(Link first){
    head=first;
    length=1;} 
    
  public void add(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
  .......
  
--------------------------------------------------------------

a)  Explain what a Stack is.  Specify if it is LIFO or FIFO.

ans:
Stack is like a pile of things. When we put things in, we call it push. When we take things out, we call it pop.
We call the top thing Peek. The last thing get in the first one get out(LIFO).

b)  Complete the Stack class by writing the "pop" method.

ans:
   public Link pop(){
     Link temp = head;
     head.next = head;
     length = length-1;
     return temp;
   }
c)  Explain what a Queue is.  Specify if it is LIFO or FIFO.
Queue is like a waiting line. When things go in, we call it add. When things get out, we call it remove.
We call the first thing Peek. The first thing get in the first one get out(FIFO).

d)  Complete the Queue class by writing the "peek" and "remove" methods.

Ans:
  public Link peek(){
    Link temp = head;
    if(head.next = null){return temp;}
    else{
      for(int i=1; i<length; i++){
        temp=temp.next;
      }
    }
    return temp;
    }
    
  public Link remove(){
    Link temp = peek();
    length = length-1;
    return temp;
   }
